name: Deploy AWS Infrastructure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Delete stack if in ROLLBACK_COMPLETE state
        run: |
          set +e
          STACK_STATUS=$(aws cloudformation describe-stacks --stack-name infrastructure-stack --query "Stacks[0].StackStatus" --output text 2>/dev/null)
          set -e

          if [ "$STACK_STATUS" == "ROLLBACK_COMPLETE" ]; then
            echo "Stack is in ROLLBACK_COMPLETE state. Deleting..."
            aws cloudformation delete-stack --stack-name infrastructure-stack
            aws cloudformation wait stack-delete-complete --stack-name infrastructure-stack
          else
            echo "Stack status is $STACK_STATUS. Proceeding with deployment."
          fi

      - name: Deploy CloudFormation stack
        run: |
          aws sts get-caller-identity
          aws cloudformation deploy \
            --template-file cloudformation-template--initial-infra.yaml \
            --stack-name infrastructure-stack \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND \
            --no-fail-on-empty-changeset

      - name: Describe stack outputs on success
        if: success()
        run: |
          echo "Stack deployed successfully! Fetching outputs..."
          aws cloudformation describe-stacks \
            --stack-name infrastructure-stack \
            --query "Stacks[0].Outputs" \
            --output table

      - name: Describe stack events on failure
        if: failure()
        run: |
          echo "Deployment failed. Getting details..."
          if aws cloudformation describe-stacks --stack-name infrastructure-stack 2>/dev/null; then
            aws cloudformation describe-stack-events --stack-name infrastructure-stack
          else
            echo "Stack infrastructure-stack does not exist. Skipping event description."
          fi
